{"version":3,"sources":["webpack://foglet/webpack/universalModuleDefinition","webpack://foglet/webpack/bootstrap","webpack://foglet/./lib/abstract-module.js","webpack://foglet/./lib/abstract-network.js","webpack://foglet/./lib/errors.js","webpack://foglet/./lib/plugins/networks/index.js","webpack://foglet/./lib/index.js","webpack://foglet/./lib/plugins/index.js","webpack://foglet/./lib/plugins/networks/spray/spray.js","webpack://foglet/./lib/plugins/modules/index.js","webpack://foglet/./lib/plugins/modules/streams/index.js","webpack://foglet/./lib/plugins/modules/streams/unicast.js","webpack://foglet/./lib/plugins/modules/unicast/unicast.js","webpack://foglet/./lib/core.js","webpack://foglet/./node_modules/lodash.merge/index.js","webpack://foglet/(webpack)/buildin/global.js","webpack://foglet/(webpack)/buildin/module.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","[object Object]","foglet","network","options","this","_foglet","_network","_options","Errors","_modules","Map","unicast","addModule","has","moduleAlreadyDefined","set","notYetImplemented","message","error","Error","moduleName","networkName","spray","abstract","core","networks","AbstractNetwork","args","super","streams","AbstractModule","Version","version","lmerge","_networks","_defaultConfiguration","config","global","LARGE_ARRAY_SIZE","HASH_UNDEFINED","HOT_COUNT","HOT_SPAN","MAX_SAFE_INTEGER","argsTag","asyncTag","funcTag","genTag","nullTag","objectTag","proxyTag","undefinedTag","reIsHostCtor","reIsUint","typedArrayTags","freeGlobal","freeSelf","self","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","binding","e","nodeIsTypedArray","isTypedArray","safeGet","undefined","uid","func","transform","arrayProto","Array","funcProto","objectProto","coreJsData","funcToString","toString","maskSrcKey","exec","keys","IE_PROTO","nativeObjectToString","objectCtorString","reIsNative","RegExp","replace","Buffer","Uint8Array","allocUnsafe","getPrototype","getPrototypeOf","arg","objectCreate","propertyIsEnumerable","splice","symToStringTag","getNative","nativeIsBuffer","isBuffer","nativeMax","Math","max","nativeNow","Date","now","nativeCreate","baseCreate","proto","isObject","result","Hash","entries","index","length","clear","entry","ListCache","MapCache","Stack","data","__data__","size","arrayLikeKeys","inherited","isArr","isArray","isArg","isArguments","isBuff","isType","skipIndexes","iteratee","baseTimes","String","isIndex","push","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","array","configurable","writable","pop","hash","map","string","getMapData","pairs","fromRight","baseFor","keysFunc","iterable","props","baseGetTag","isOwn","tag","unmasked","getRawTag","objectToString","baseIsArguments","isObjectLike","baseIsNative","isFunction","test","toSource","baseKeysIn","nativeKeysIn","isProto","isPrototype","baseMerge","source","srcIndex","customizer","stack","srcValue","mergeFunc","stacked","newValue","isCommon","isTyped","isArrayLike","copyArray","buffer","isDeep","slice","constructor","copy","cloneBuffer","typedArray","arrayBuffer","byteLength","byteOffset","Ctor","isPlainObject","isNew","copyObject","keysIn","toPlainObject","initCloneObject","baseMergeDeep","baseRest","start","setToString","arguments","otherArgs","thisArg","apply","overRest","identity","type","getValue","count","lastCalled","stamp","remaining","shortOut","other","isLength","baseUnary","assigner","merge","sources","guard","isIterateeCall","g","eval","webpackPolyfill","deprecate","paths","children"],"mappings":"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","file":"foglet-core.bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"foglet\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"foglet\"] = factory();\n\telse\n\t\troot[\"foglet\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = class AbstractModule {\n  constructor (foglet, network, options) {\n    this._foglet = foglet\n    this._network = network\n    this._options = options\n  }\n  /**\n   * Return the main foglet instance, the Core\n   * @return {Core}\n   */\n  get foglet () {\n    return this._foglet\n  }\n  /**\n   * Return options of this network\n   * @return {Object}\n   */\n  get options () {\n    return this._options\n  }\n\n  /**\n   * Return the parent network\n   * @return {AbstractNetwork} Parent Network\n   */\n  get network () {\n    return this._network\n  }\n}\n","const Errors = require('./errors')\nclass AbstractNetwork {\n  constructor (foglet, options) {\n    this._foglet = foglet\n    this._options = options\n    this._modules = new Map()\n  }\n  default (options) {\n    const unicast = new (require('./plugins').modules.unicast)(this.foglet, this, options) // eslint-disable-line\n    this.addModule(unicast.name, unicast)\n    return this\n  }\n  /**\n   * Return the main foglet instance, the Core\n   * @return {Core}\n   */\n  get foglet () {\n    return this._foglet\n  }\n  /**\n   * Return options of this network\n   * @return {Object}\n   */\n  get options () {\n    return this._options\n  }\n  /**\n   * Return the map containing all modules\n   * @return {Map} Map containing all modules for this network.\n   */\n  get modules () {\n    return this._modules\n  }\n  /**\n   * Attached a module to this network\n   * @param {Module} module Module to attach\n   */\n  addModule (name, module) {\n    if (this.modules.has(name)) {\n      throw Errors.moduleAlreadyDefined(module.name)\n    } else {\n      this.modules.set(name, module)\n    }\n  }\n}\n\nmodule.exports = AbstractNetwork\n","module.exports = {\n  notYetImplemented: (message, error) => new Error('Not yet implemented: ' + message, error),\n  moduleAlreadyDefined: (moduleName, networkName) => new Error(`Module ${moduleName} already defined in network: ${networkName}`)\n}\n","module.exports = {\n  spray: require('./spray/spray')\n}\n","module.exports = {\n  abstract: {\n    network: require('./abstract-network'),\n    module: require('./abstract-module')\n  },\n  core: require('./core')\n}\n","module.exports = {\n  networks: require('./networks'),\n  modules: require('./modules')\n}\n","const Errors = require('../../../errors')\nconst AbstractNetwork = require('../../../abstract-network')\nclass Spray extends AbstractNetwork {\n  constructor (...args) {\n    super(...args)\n    this.name = 'spray-wrtc'\n  }\n}\nmodule.exports = Spray\n","module.exports = {\n  streams: require('./streams'),\n  unicast: require('./unicast/unicast.js')\n}\n","module.exports = {\n  unicast: require('./unicast')\n}\n","const AbstractModule = require('../../../abstract-module')\nclass StreamUnicast extends AbstractModule {\n  constructor (...args) {\n    super(...args)\n    this.name = 'stream-unicast'\n  }\n}\nmodule.exports = StreamUnicast\n","const AbstractModule = require('../../../abstract-module')\nclass Unicast extends AbstractModule {\n  constructor (...args) {\n    super(...args)\n    this.name = 'unicast'\n  }\n}\nmodule.exports = Unicast\n","const Version = require('../package.json').version\nconst lmerge = require('lodash.merge')\nclass Core {\n  constructor (options) {\n    this._options = lmerge({\n      version: Version\n    }, options)\n    this.name = 'core'\n    this._networks = new Map()\n    this._defaultConfiguration = {\n      network: require('./plugins/networks').spray\n    }\n  }\n  get options () {\n    return this._options\n  }\n  /**\n   * Get all networks in a Map<name:String, Network>\n   * @return {Map}\n   */\n  get networks () {\n    return this._networks\n  }\n  /**\n   * Build a default configuration of a Foglet that contains a Spray network with a unicast and stream unicast modules\n   * @param {Object} options Options for the network\n   * @param {Object} [config=this._defaultConfiguration] the Default configuration\n   * @return {Object} return the default network\n   */\n  default (options, config = this._defaultConfiguration) {\n    const network = new config.network(this, options) // eslint-disable-line\n    this._networks.set(network.name, network)\n    return this._networks.get(network.name)\n  }\n}\n\nmodule.exports = Core\n","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Gets the value at `key`, unless `key` is \"__proto__\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  return key == '__proto__'\n    ? undefined\n    : object[key];\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeMax = Math.max,\n    nativeNow = Date.now;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    if (isObject(srcValue)) {\n      stack || (stack = new Stack);\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = merge;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}